% start S
############################
# Grammar Rules
#############################

# Declarative sentence
S[SEM = ?vp] -> NP[NUM=?n] VP[AGR=[TENSE=pres], NUM=?n,SEM=?vp]
S[SEM = ?vp] -> VP[AGR=[TENSE=inf], SEM=?vp]


VP[NUM=?n,SEM=<?v(?obj)>] -> TV[NUM=?n,SEM=?v,TENSE=pres] NP[SEM=?obj]
VP[AGR=[TENSE=inf], NUM=?n, SEM=<?v(?obj)>] -> DTV[AGR=[TENSE=inf], NUM=?n,SEM=?v] NP[TYPE=subject] NP[SEM=?obj]

# personal pronouns
NP[NUM=sg, TYPE=person] -> 'I'
NP[NUM=sg, TYPE=subject] -> 'me'

# Shapes
NP[NUM=sg, TYPE=shape, SEM=<?obj(?from,?to)>] -> Det[NUM=sg] N[TYPE=shape, SEM=?obj] PP[TYPE=from, SEM=?from] PP[TYPE=to, SEM=?to]
NP[NUM=sg, TYPE=shape, SEM=<?obj(?at,?with)>] -> Det[NUM=sg] N[TYPE=shape, SEM=?obj] PP[TYPE=at, SEM=?at] PP[TYPE=with, SEM=?with]
NP[NUM=sg, TYPE=shape, SEM=<?obj(?at,?with)>] -> Det[NUM=sg] N[TYPE=shape, SEM=?obj] PP[TYPE=with, SEM=?with] PP[TYPE=at, SEM=?at]

# Property of shapes (eg radius, width?, height?)
NP[NUM=sg, TYPE=property, SEM=<?obj(?of)>] -> Det[NUM=sg] N[TYPE=property, SEM=?obj] PP[TYPE=of, SEM=?of]

# Locations
NP[TYPE=location, SEM=<loc(?x,?y)>] -> NUM[SEM=?x] NUM[SEM=?y]
NP[TYPE=length, SEM=<?unit(?x)>] -> NUM[NUM=?n, SEM=?x] N[TYPE=length, NUM=?n, SEM=?unit]

# Conjunction of NP
NP[NUM=pl, SEM=<?p(?x,?y)>, TYPE=?t1] -> NP[SEM=?x, TYPE=?t1] CONJ[SEM=?p] NP[SEM=?y, TYPE=?t1]

# Prepositions for locations
PP[TYPE=?t, OBJ=location, SEM=?np] -> Prep[TYPE=?t, OBJ=location] NP[TYPE=location, SEM=?np]

# Prepositions for properties
PP[TYPE=of, SEM=?np] -> Prep[TYPE=of] NP[NUM=?n, TYPE=length, SEM=?np]
PP[TYPE=with, SEM=?np] -> Prep[TYPE=with] NP[TYPE=property, SEM=?np]

#############################
# Lexical Rules
#############################

Det[NUM=sg,SEM=<\P Q.exists x.(P(x) & Q(x))>] -> 'a'
Det[NUM=sg,SEM=<\P Q.exists x.(P(x) & Q(x))>] -> 'an'

N[NUM=sg, TYPE=shape, SEM=<\c r.circle(c,r)>] -> 'circle'
N[NUM=sg, TYPE=shape, SEM=<\c1 c2.rectangle(c1,c2)>] -> 'rectangle'
N[NUM=sg, TYPE=shape, SEM=<\c1 c2.line(c1,c2)>] -> 'line'
N[NUM=sg, TYPE=property, SEM=<\x.radius(x)>] -> 'radius'
N[NUM=sg, TYPE=property, SEM=<\x.diameter(x)>] -> 'diameter'
N[TYPE=length, NUM=sg,SEM=<\x.pixel(x)>] -> 'pixel'
N[TYPE=length, NUM=pl,SEM=<\x.pixel(x)>] -> 'pixels'

TV[AGR=[TENSE=pres], NUM=sg, SEM=<\x.draw(x)>] -> 'want'
DTV[AGR=[TENSE=inf], NUM=sg, SEM=<\x.draw(x)>] -> 'give'
DTV[AGR=[TENSE=inf], NUM=sg, SEM=<\x.draw(x)>] -> 'draw'


Prep[TYPE=to, OBJ=location] -> 'to'
Prep[TYPE=from, OBJ=location] -> 'from'
Prep[TYPE=at, OBJ=location] -> 'at'
Prep[TYPE=around, OBJ=location] -> 'around'
Prep[TYPE=of, OBJ=of] -> 'of'
Prep[TYPE=with, OBJ=with] -> 'with'

CONJ[SEM=<\x y.and_(x,y)>] -> 'and'
DISJ[SEM=<\x y.or_(x,y)>] -> 'or'